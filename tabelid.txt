

1 - kasutajate tabel
| id | firstname | lastname | dateofbirth | gender | shoesize | country | city | username | email | password | created | userlevel |


2 - kasutaja muu info
| kasutajaid | fav_brand | fav_model |


3 - piltide tabel
| id |  name  | primary |  deleted  |  flagged  |
| 1  | a.jpg  | yes     | 01.01.17  | 01.01.17  |


4 - kuulutuste tabel
| id | heading   | brandid | model | type | condition | price | description | imgid | userid | contactmethod |
| 1  | pealkiri  | 3       |       | men  | used      | 500   | tekst       | 25    | 21     | 1             |


5 - tootjate/brändide tabel
| id | brand |


6 - kontaktiviiside tabel
| id | method |
| 1  | email  |
| 2  | phone  |
| 3  | pm     |



1 - kasutajate tabel

CREATE TABLE sm_users(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	firstname VARCHAR(100),
	lastname VARCHAR(100),
	dateofbirth DATE,
	gender VARCHAR(30),
	shoesize INT (2),
	country VARCHAR(100),
	city VARCHAR(100),
	username VARCHAR(30) NOT NULL,
	email VARCHAR(255) NOT NULL,
	password VARCHAR(128) NOT NULL,
	created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	userlevel INT,
	UNIQUE (username),
	UNIQUE (email)
);



2 - kasutaja muu info

CREATE TABLE sm_userinfo(
	userid INT,
	fav_brand VARCHAR(100),
	fav_model VARCHAR(100),
	FOREIGN KEY(userid) REFERENCES sm_users(id)
);



3 - piltide tabel

CREATE TABLE sm_uploads(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50),
	primarypic INT,
	deleted DATE,
	flagged DATE,
	postid INT,
	FOREIGN KEY(postid) REFERENCES sm_posts(id)
);



4 - kuulutuste tabel

CREATE TABLE sm_posts(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	heading VARCHAR(50),
	brandid INT,
	model VARCHAR(100),
	type VARCHAR(30),
	sneakercondition VARCHAR(30),
	price DECIMAL(8, 2),
	description VARCHAR(255),
	userid INT,
	FOREIGN KEY(brandid) REFERENCES sm_brands(id),
	FOREIGN KEY(userid) REFERENCES proov1(id)
);



5 - tootjate/brändide tabel

CREATE TABLE sm_brands(
	id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
	brand VARCHAR(100)
);



SELECT heading, model, price, description, name
	FROM sm_posts p
	JOIN sm_uploads u ON p.id=u.postid;


SELECT heading, model, price, description, name
	FROM sm_posts p
	JOIN (SELECT * FROM sm_uploads WHERE primarypic=1 AND deleted IS NULL) u ON p.id=u.postid;

	
SELECT * FROM sm_uploads WHERE primarypic=1 AND deleted IS NULL;

	
SELECT postid, heading, model, price, description, name
	FROM sm_posts p
	JOIN (SELECT * FROM sm_uploads WHERE primarypic=1 AND deleted IS NULL) u ON p.id=u.postid;

	
SELECT postid, heading, model, price, description, name
	FROM sm_posts p
	JOIN (SELECT * FROM sm_uploads WHERE primarypic=1 AND deleted IS NULL AND postid = 1) u ON p.id=u.postid;


